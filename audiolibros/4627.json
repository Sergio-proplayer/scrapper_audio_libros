{"titulo":"Diseño guiado por el dominio [Domain-Driven Design]: Una guía completa para principiantes Aprenda a implementar fácilmente el diseño guiado por el dominio ( Libro En Espanol/ ... Spanish Book Version) (Spanish Edition)","imagen":"https://m.media-amazon.com/images/I/516cx7QL0-S.jpg","descripcion":"\"Abordemos la pregunta crítica de inmediato: ¿por qué tienes que leer este libro? Si tiene un don para el desarrollo de software, no desperdicie esta oportunidad. Ahora es tu oportunidad de convertirte en un experto.  Cuando los enfoques confiables funcionan sin un diseño impulsado por el dominio, tal negación de esta tecnología o entorno de mercado se vuelve costosa. Incluso las aplicaciones móviles de tamaño mediano se benefician enormemente de la estructura de la aplicación de esta sorprendente arquitectura. Con demasiada frecuencia, los desarrolladores solo lanzan líneas de código a problemas que pueden solucionarse con cambios estructurales vitales.  El diseño impulsado por dominio hace un gran trabajo al incorporar las condiciones de la industria en aspectos del desarrollo de software. Por ejemplo, este libro se centra en cómo la precisión del diseño impulsado por el modelo implica una comunicación constante en múltiples ocasiones, y los desarrolladores separados por equipos / ubicaciones no participan en contacto continuo. Se proporcionan recomendaciones para segmentar el software como consecuencia de la realidad del mercado. Esto permitirá un modelado eficiente en equipos independientes. Dichos enfoques también tienen en cuenta los problemas políticos dentro de los grupos, así como la colaboración de los departamentos sobrecargados y los sistemas heredados.  De hecho, el libro señala una afirmación contra la cual muchos desarrolladores protestan, pero esto es particularmente cierto: no todos los desarrolladores en un grupo necesitan seguir el mismo enfoque.  El reclamo no significa que se espera que los desarrolladores utilicen soluciones arbitrarias; implica que los programadores no pueden vincularse entre sí a una solución única si pueden abordar problemas fundamentalmente diferentes. Dos equipos que trabajan en su dispositivo pueden tener una categoría de \"Usuario\" y pueden tener una Categoría de consumidor. Pero tal vez el Equipo A quiere un cliente como parte del proceso de pago, o el Equipo B necesita un cliente como parte de un sistema de soporte. ¿Deberíamos usar todos los departamentos en la misma clase de cliente? Tal vez no. Quizás deberían tener facturación y soporte de grado de consumidor. Luego, cada Consumidor incluye solo las acciones que necesita para el trabajo que tiene que hacer. Sin embargo, encontrará una resistencia considerable a soluciones como esta: los críticos se quejan de \"duplicación innecesaria\", pero de hecho, no es una replicación, y es necesaria. Por razones similares, el libro tiende a respaldar la posibilidad de bloquear el \"contexto limitado\".  Además, esta guía para principiantes es acertada cuando se trata de estructurar el código de una manera que permita la estructura del negocio. El libro también enfatiza la concentración y la gestión de proyectos en un sentido que también ayuda a los equipos a operar independientemente sin el dictador y el diseño.\"\n","link_init":"https://amazon.com/-/es/dp/B094BJNSPN/ref=sr_1_66","link_final":"https://www.amazon.com/hz/audible/mlp/mfpdp/B094BJNSPN?actionCode=AMSTM1450129210001"}